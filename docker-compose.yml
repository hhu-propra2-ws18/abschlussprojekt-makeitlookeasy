version: '3.7'
services:
#  propay:  propay
#    image: propay
#    container_name: propay
#    restart: always
#    ports:
#      - "8080:80"
#    depends_on:
#      - ausleiherino


#  ausleiherino:
#    container_name: ausleiherino
#    build: .
#    volumes:
#      - .:/app
#    working_dir: /app
#    user: appuser
#    environment:
#      - POSTGRES_PASSWORD=secret
#      - POSTGRES_DB=database
#      - POSTGRES_USER=postgres
#    command: dockerize -wait tcp://database:5432 -timeout 600s ./gradlew bootRun

  database:
    image: postgres
    restart: always
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=database
      - POSTGRES_USER=postgres
    volumes:
      - database_volume:/var/lib/postgresql/data

  sonar-db:
    container_name: sonar-db
    image: postgres
    hostname: pgsql-01
    ports:
      - 4321:4321
    environment:
      - POSTGRES_DB=sonar
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar

  sonar:
    container_name: sonarqube
    image: sonarqube
    hostname: sonar-01
    links:
      - sonar-db
    ports:
      - 9000:9000
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://pgsql-01:4321/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - sonardb_volume:/var/lib/postgresql/data

#  volumerize:
#    container_name: volumerize
#    depends_on:
#      - sonar
#    image: blacklabelops/volumerize
#    volumes:
#      - database_volume:/source
#      - backup_volume:/backup
#      - cache_volume:/volumerize-cache
#    environment:
#      - 'VOLUMERIZE_SOURCE=/source'
#      - 'VOLUMERIZE_TARGET=file:///backup'

  jenkins:
    image: 'jenkins/jenkins:lts'
    container_name: jenkins-docker
    restart: unless-stopped
    ports:
      - 1234:1234
    volumes:
      - './jenkins_home:/var/jenkins_home'

volumes:
  database_volume:
    external: true
  sonardb_volume:
    external: true
#  backup_volume:
#    external: false
#  cache_volume:
#    external: false


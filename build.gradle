buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		maven {
      url "https://plugins.gradle.org/m2/"
    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9")
    classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7")
	}
}

apply plugin: 'com.github.spotbugs'
apply plugin: 'org.sonarqube'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

checkstyle {
	toolVersion = "8.7"
}

apply plugin: 'pmd'
pmd {
	ruleSets = [
			'java-android', 'java-basic', 'java-braces',
			'java-clone', 'java-codesize', 'java-comments',
			'java-controversial', 'java-coupling', 'java-design',
			'java-empty', 'java-finalizers', 'java-imports',
			'java-j2ee', 'java-javabeans', 'java-junit',
			'java-logging-jakarta-commons', 'java-logging-java',
			'java-migrating', 'java-naming', 'java-optimizations',
			'java-strictexception', 'java-strings', 'java-sunsecure',
			'java-typeresolution', 'java-unnecessary', 'java-unusedcode'
	]
	toolVersion = '5.1.1'
	ignoreFailures = true
}


group = 'de.propra2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
  annotationProcessor('org.projectlombok:lombok')
  compile("org.springframework.boot:spring-boot-starter-actuator")
  compileOnly('org.projectlombok:lombok')
  developmentOnly('org.springframework.boot:spring-boot-devtools')
  implementation('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation('org.springframework.boot:spring-boot-starter-mail')
  implementation('org.springframework.boot:spring-boot-starter-security')
  implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation('org.springframework.session:spring-session-core')
  runtimeOnly('org.postgresql:postgresql')
  spotbugsPlugins('com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1')
  testImplementation('junit:junit')
  testImplementation('org.mockito:mockito-core')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
  testImplementation('org.springframework.security:spring-security-test')
}

bootRun {
	classpath = sourceSets.main.runtimeClasspath + configurations.developmentOnly
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
  spotbugs {
    effort = "max"
    reportLevel = "low"
  }
}




